!function(t){var i={};function e(n){if(i[n])return i[n].exports;var o=i[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,e),o.l=!0,o.exports}e.m=t,e.c=i,e.d=function(t,i,n){e.o(t,i)||Object.defineProperty(t,i,{enumerable:!0,get:n})},e.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},e.t=function(t,i){if(1&i&&(t=e(t)),8&i)return t;if(4&i&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&i&&"string"!=typeof t)for(var o in t)e.d(n,o,function(i){return t[i]}.bind(null,o));return n},e.n=function(t){var i=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(i,"a",i),i},e.o=function(t,i){return Object.prototype.hasOwnProperty.call(t,i)},e.p="",e(e.s=0)}([function(t,i,e){"use strict";e.r(i);var n=Object.assign||function(t){for(var i=1;i<arguments.length;i++){var e=arguments[i];for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])}return t};new class{constructor(t){this.options=n({},{idCanvas:"#canvas",bgColor:"#000000"},t),this.canvas=document.querySelector(this.options.idCanvas),this.context=this.canvas.getContext("2d"),this.arrayFigures=[],this.init()}init(){this.canvas.width=window.innerWidth,this.canvas.height=window.innerHeight,this.fillArrayFigures()}fillArrayFigures(){for(let t=0;t<this.options.pointCount;t++){let t={x:this.randomValue(0,this.canvas.width),y:this.randomValue(0,this.canvas.height),angle:this.randomValue(0,2*Math.PI)};this.arrayFigures.push(t)}}randomValue(t,i){return t+Math.random()*(i-t+1)}drawRect(){this.context.fillStyle=this.options.bgColor,this.context.fillRect(0,0,this.canvas.width,this.canvas.height)}drawPointer(){for(const t of this.arrayFigures)this.context.beginPath(),this.context.fillStyle=this.options.pointColor,this.context.arc(t.x,t.y,this.options.pointRadius,0,2*Math.PI),this.context.fill(),this.context.closePath()}movePointer(){for(const t of this.arrayFigures)t.x=t.x+this.options.pointSpeed*Math.cos(t.angle),t.y=t.y+this.options.pointSpeed*Math.sin(t.angle),t.x<0&&(t.x=this.canvas.width+t.x),t.x>this.canvas.width&&(t.x=this.canvas.width-t.x),t.y<0&&(t.y=this.canvas.height+t.y),t.y>this.canvas.height&&(t.y=this.canvas.height-t.y)}getDist(t,i){return((t.x-i.x)**2+(t.y-i.y)**2)**.5}drawLines(){for(let t=0;t<this.arrayFigures.length-1;t++)for(let i=t+1;i<this.arrayFigures.length;i++){const e=this.arrayFigures[t],n=this.arrayFigures[i];this.getDist(e,n)<=this.options.pointDis&&(this.context.beginPath(),this.context.strokeStyle=this.options.pointColor,this.context.moveTo(e.x,e.y),this.context.lineTo(n.x,n.y),this.context.stroke(),this.context.closePath())}}tick(){this.drawRect(),this.movePointer(),this.drawPointer(),this.drawLines(),requestAnimationFrame(this.tick.bind(this))}}(n({},{idCanvas:"#canvas",bgColor:"#fa35fa",pointCount:200,pointColor:"white",pointRadius:5,pointDis:75,pointSpeed:2})).tick()}]);